

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.datasource.url=jdbc:derby:newspaper;create=true
#spring.datasource.url=jdbc:derby:/home/moonstar/newspaper.db;create=true
#spring.datasource.url=jdbc:derby://localhost:1527/newspaper;create=true
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyTenSevenDialect

# server port
server.port = 9080 


app.orientdb.host = localhost
app.orientdb.user = admin
app.orientdb.passwd = admin
app.orientdb.dbname = Newspaper

app.influxdb.host = localhost
app.influxdb.port = 28086
app.influxdb.user = root
app.influxdb.passwd = root
app.influxdb.dbname = NewsCrawlerLog

app.pulsar.host =  172.17.0.5
app.pulsar.port =  6650
app.pulsar.topic = newspaper

app.solr.url = http://localhost:8983
app.solr.collection = newspaper

spring.cockroach.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL96Dialect
spring.datasource.cockroach.jdbc-url=jdbc:postgresql://localhost:32768/newspaper
spring.datasource.cockroach.url=jdbc:postgresql://localhost:32768/newspaper
spring.datasource.cockroach.username=root
spring.datasource.cockroach.password=

spring.datasource.derby.jdbc-url=jdbc:derby:/home/moonstar/newspaper.db;create=true
spring.datasource.derby.url=jdbc:derby:/home/moonstar/newspaper.db;create=true
spring.derby.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyTenSevenDialect
